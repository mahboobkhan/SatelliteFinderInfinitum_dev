// Generated by view binder compiler. Do not edit!
package com.example.satellitefinder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.satellitefinder.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ExitDialogBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout bottomSheet;

  @NonNull
  public final AppCompatButton cancel;

  @NonNull
  public final MaterialButton exit;

  @NonNull
  public final ImageView ivExit;

  @NonNull
  public final CardView layoutNative;

  @NonNull
  public final FrameLayout sheet;

  @NonNull
  public final TextView tvExit;

  @NonNull
  public final TextView tvv;

  private ExitDialogBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout bottomSheet, @NonNull AppCompatButton cancel,
      @NonNull MaterialButton exit, @NonNull ImageView ivExit, @NonNull CardView layoutNative,
      @NonNull FrameLayout sheet, @NonNull TextView tvExit, @NonNull TextView tvv) {
    this.rootView = rootView;
    this.bottomSheet = bottomSheet;
    this.cancel = cancel;
    this.exit = exit;
    this.ivExit = ivExit;
    this.layoutNative = layoutNative;
    this.sheet = sheet;
    this.tvExit = tvExit;
    this.tvv = tvv;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ExitDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ExitDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.exit_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ExitDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout bottomSheet = (ConstraintLayout) rootView;

      id = R.id.cancel;
      AppCompatButton cancel = ViewBindings.findChildViewById(rootView, id);
      if (cancel == null) {
        break missingId;
      }

      id = R.id.exit;
      MaterialButton exit = ViewBindings.findChildViewById(rootView, id);
      if (exit == null) {
        break missingId;
      }

      id = R.id.ivExit;
      ImageView ivExit = ViewBindings.findChildViewById(rootView, id);
      if (ivExit == null) {
        break missingId;
      }

      id = R.id.layout_native;
      CardView layoutNative = ViewBindings.findChildViewById(rootView, id);
      if (layoutNative == null) {
        break missingId;
      }

      id = R.id.sheet;
      FrameLayout sheet = ViewBindings.findChildViewById(rootView, id);
      if (sheet == null) {
        break missingId;
      }

      id = R.id.tvExit;
      TextView tvExit = ViewBindings.findChildViewById(rootView, id);
      if (tvExit == null) {
        break missingId;
      }

      id = R.id.tvv;
      TextView tvv = ViewBindings.findChildViewById(rootView, id);
      if (tvv == null) {
        break missingId;
      }

      return new ExitDialogBinding((ConstraintLayout) rootView, bottomSheet, cancel, exit, ivExit,
          layoutNative, sheet, tvExit, tvv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
