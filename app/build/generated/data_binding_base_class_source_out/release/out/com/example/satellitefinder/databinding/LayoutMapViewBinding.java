// Generated by view binder compiler. Do not edit!
package com.example.satellitefinder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.satellitefinder.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutMapViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout btnHybridView;

  @NonNull
  public final LinearLayout btnNormalView;

  @NonNull
  public final LinearLayout btnSatelliteView;

  @NonNull
  public final LinearLayout btnTerranView;

  @NonNull
  public final TextView heading;

  private LayoutMapViewBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout btnHybridView, @NonNull LinearLayout btnNormalView,
      @NonNull LinearLayout btnSatelliteView, @NonNull LinearLayout btnTerranView,
      @NonNull TextView heading) {
    this.rootView = rootView;
    this.btnHybridView = btnHybridView;
    this.btnNormalView = btnNormalView;
    this.btnSatelliteView = btnSatelliteView;
    this.btnTerranView = btnTerranView;
    this.heading = heading;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutMapViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutMapViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_map_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutMapViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnHybridView;
      LinearLayout btnHybridView = ViewBindings.findChildViewById(rootView, id);
      if (btnHybridView == null) {
        break missingId;
      }

      id = R.id.btnNormalView;
      LinearLayout btnNormalView = ViewBindings.findChildViewById(rootView, id);
      if (btnNormalView == null) {
        break missingId;
      }

      id = R.id.btnSatelliteView;
      LinearLayout btnSatelliteView = ViewBindings.findChildViewById(rootView, id);
      if (btnSatelliteView == null) {
        break missingId;
      }

      id = R.id.btnTerranView;
      LinearLayout btnTerranView = ViewBindings.findChildViewById(rootView, id);
      if (btnTerranView == null) {
        break missingId;
      }

      id = R.id.heading;
      TextView heading = ViewBindings.findChildViewById(rootView, id);
      if (heading == null) {
        break missingId;
      }

      return new LayoutMapViewBinding((ConstraintLayout) rootView, btnHybridView, btnNormalView,
          btnSatelliteView, btnTerranView, heading);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
