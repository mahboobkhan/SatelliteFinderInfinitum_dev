// Generated by view binder compiler. Do not edit!
package com.example.satellitefinder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.satellitefinder.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySatelliteFindBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView btnInfo;

  @NonNull
  public final MaterialCardView btnSelectSatellite;

  @NonNull
  public final TextView compassAzimuthTv;

  @NonNull
  public final CardView compassRoundLayout;

  @NonNull
  public final TextView heading;

  @NonNull
  public final ImageView imgMapCompass;

  @NonNull
  public final MaterialCardView infoCard;

  @NonNull
  public final ImageView iv;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final MaterialCardView layoutNative;

  @NonNull
  public final TextView leftToRightTextTv;

  @NonNull
  public final TextView moveAntenaTv;

  @NonNull
  public final RelativeLayout rotateRelativeLayout;

  @NonNull
  public final TextView satAzimut;

  @NonNull
  public final TextView satElevation;

  @NonNull
  public final RelativeLayout sateImageView;

  @NonNull
  public final ImageView satelliteAzimuthIv;

  @NonNull
  public final ImageView satelliteAzimuthLine;

  @NonNull
  public final TextView satelliteLNBskewTv;

  @NonNull
  public final TextView satellitePositionTv;

  @NonNull
  public final TextView satelliteTitle;

  @NonNull
  public final TextView texCompAzimuth;

  @NonNull
  public final LinearLayout textCompass;

  private ActivitySatelliteFindBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCardView btnInfo, @NonNull MaterialCardView btnSelectSatellite,
      @NonNull TextView compassAzimuthTv, @NonNull CardView compassRoundLayout,
      @NonNull TextView heading, @NonNull ImageView imgMapCompass,
      @NonNull MaterialCardView infoCard, @NonNull ImageView iv, @NonNull ImageView ivBack,
      @NonNull MaterialCardView layoutNative, @NonNull TextView leftToRightTextTv,
      @NonNull TextView moveAntenaTv, @NonNull RelativeLayout rotateRelativeLayout,
      @NonNull TextView satAzimut, @NonNull TextView satElevation,
      @NonNull RelativeLayout sateImageView, @NonNull ImageView satelliteAzimuthIv,
      @NonNull ImageView satelliteAzimuthLine, @NonNull TextView satelliteLNBskewTv,
      @NonNull TextView satellitePositionTv, @NonNull TextView satelliteTitle,
      @NonNull TextView texCompAzimuth, @NonNull LinearLayout textCompass) {
    this.rootView = rootView;
    this.btnInfo = btnInfo;
    this.btnSelectSatellite = btnSelectSatellite;
    this.compassAzimuthTv = compassAzimuthTv;
    this.compassRoundLayout = compassRoundLayout;
    this.heading = heading;
    this.imgMapCompass = imgMapCompass;
    this.infoCard = infoCard;
    this.iv = iv;
    this.ivBack = ivBack;
    this.layoutNative = layoutNative;
    this.leftToRightTextTv = leftToRightTextTv;
    this.moveAntenaTv = moveAntenaTv;
    this.rotateRelativeLayout = rotateRelativeLayout;
    this.satAzimut = satAzimut;
    this.satElevation = satElevation;
    this.sateImageView = sateImageView;
    this.satelliteAzimuthIv = satelliteAzimuthIv;
    this.satelliteAzimuthLine = satelliteAzimuthLine;
    this.satelliteLNBskewTv = satelliteLNBskewTv;
    this.satellitePositionTv = satellitePositionTv;
    this.satelliteTitle = satelliteTitle;
    this.texCompAzimuth = texCompAzimuth;
    this.textCompass = textCompass;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySatelliteFindBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySatelliteFindBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_satellite_find, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySatelliteFindBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnInfo;
      MaterialCardView btnInfo = ViewBindings.findChildViewById(rootView, id);
      if (btnInfo == null) {
        break missingId;
      }

      id = R.id.btnSelectSatellite;
      MaterialCardView btnSelectSatellite = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectSatellite == null) {
        break missingId;
      }

      id = R.id.compass_azimuthTv;
      TextView compassAzimuthTv = ViewBindings.findChildViewById(rootView, id);
      if (compassAzimuthTv == null) {
        break missingId;
      }

      id = R.id.compass_Round_layout;
      CardView compassRoundLayout = ViewBindings.findChildViewById(rootView, id);
      if (compassRoundLayout == null) {
        break missingId;
      }

      id = R.id.heading;
      TextView heading = ViewBindings.findChildViewById(rootView, id);
      if (heading == null) {
        break missingId;
      }

      id = R.id.imgMap_Compass;
      ImageView imgMapCompass = ViewBindings.findChildViewById(rootView, id);
      if (imgMapCompass == null) {
        break missingId;
      }

      id = R.id.infoCard;
      MaterialCardView infoCard = ViewBindings.findChildViewById(rootView, id);
      if (infoCard == null) {
        break missingId;
      }

      id = R.id.iv;
      ImageView iv = ViewBindings.findChildViewById(rootView, id);
      if (iv == null) {
        break missingId;
      }

      id = R.id.ivBack;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.layout_native;
      MaterialCardView layoutNative = ViewBindings.findChildViewById(rootView, id);
      if (layoutNative == null) {
        break missingId;
      }

      id = R.id.leftToRightTextTv;
      TextView leftToRightTextTv = ViewBindings.findChildViewById(rootView, id);
      if (leftToRightTextTv == null) {
        break missingId;
      }

      id = R.id.moveAntenaTv;
      TextView moveAntenaTv = ViewBindings.findChildViewById(rootView, id);
      if (moveAntenaTv == null) {
        break missingId;
      }

      id = R.id.rotateRelativeLayout;
      RelativeLayout rotateRelativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (rotateRelativeLayout == null) {
        break missingId;
      }

      id = R.id.sat_azimut;
      TextView satAzimut = ViewBindings.findChildViewById(rootView, id);
      if (satAzimut == null) {
        break missingId;
      }

      id = R.id.satElevation;
      TextView satElevation = ViewBindings.findChildViewById(rootView, id);
      if (satElevation == null) {
        break missingId;
      }

      id = R.id.sateImageView;
      RelativeLayout sateImageView = ViewBindings.findChildViewById(rootView, id);
      if (sateImageView == null) {
        break missingId;
      }

      id = R.id.satellite_Azimuth_Iv;
      ImageView satelliteAzimuthIv = ViewBindings.findChildViewById(rootView, id);
      if (satelliteAzimuthIv == null) {
        break missingId;
      }

      id = R.id.satellite_Azimuth_Line;
      ImageView satelliteAzimuthLine = ViewBindings.findChildViewById(rootView, id);
      if (satelliteAzimuthLine == null) {
        break missingId;
      }

      id = R.id.satelliteLNBskewTv;
      TextView satelliteLNBskewTv = ViewBindings.findChildViewById(rootView, id);
      if (satelliteLNBskewTv == null) {
        break missingId;
      }

      id = R.id.satellitePositionTv;
      TextView satellitePositionTv = ViewBindings.findChildViewById(rootView, id);
      if (satellitePositionTv == null) {
        break missingId;
      }

      id = R.id.satelliteTitle;
      TextView satelliteTitle = ViewBindings.findChildViewById(rootView, id);
      if (satelliteTitle == null) {
        break missingId;
      }

      id = R.id.texCompAzimuth;
      TextView texCompAzimuth = ViewBindings.findChildViewById(rootView, id);
      if (texCompAzimuth == null) {
        break missingId;
      }

      id = R.id.text_compass;
      LinearLayout textCompass = ViewBindings.findChildViewById(rootView, id);
      if (textCompass == null) {
        break missingId;
      }

      return new ActivitySatelliteFindBinding((ConstraintLayout) rootView, btnInfo,
          btnSelectSatellite, compassAzimuthTv, compassRoundLayout, heading, imgMapCompass,
          infoCard, iv, ivBack, layoutNative, leftToRightTextTv, moveAntenaTv, rotateRelativeLayout,
          satAzimut, satElevation, sateImageView, satelliteAzimuthIv, satelliteAzimuthLine,
          satelliteLNBskewTv, satellitePositionTv, satelliteTitle, texCompAzimuth, textCompass);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
